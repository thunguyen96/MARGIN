//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GUI.QLCKWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QLCKBUSSoap", Namespace="http://tempuri.org/")]
    public partial class QLCKBUS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback layDSCKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetmaCKOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThemCKOperationCompleted;
        
        private System.Threading.SendOrPostCallback KTThongTinThemCKOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuaCKOperationCompleted;
        
        private System.Threading.SendOrPostCallback KTThongTinSuaCKOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QLCKBUS() {
            this.Url = global::GUI.Properties.Settings.Default.GUI_QLCKWS_QLCKBUS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event layDSCKCompletedEventHandler layDSCKCompleted;
        
        /// <remarks/>
        public event GetmaCKCompletedEventHandler GetmaCKCompleted;
        
        /// <remarks/>
        public event ThemCKCompletedEventHandler ThemCKCompleted;
        
        /// <remarks/>
        public event KTThongTinThemCKCompletedEventHandler KTThongTinThemCKCompleted;
        
        /// <remarks/>
        public event SuaCKCompletedEventHandler SuaCKCompleted;
        
        /// <remarks/>
        public event KTThongTinSuaCKCompletedEventHandler KTThongTinSuaCKCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/layDSCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string layDSCK() {
            object[] results = this.Invoke("layDSCK", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void layDSCKAsync() {
            this.layDSCKAsync(null);
        }
        
        /// <remarks/>
        public void layDSCKAsync(object userState) {
            if ((this.layDSCKOperationCompleted == null)) {
                this.layDSCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlayDSCKOperationCompleted);
            }
            this.InvokeAsync("layDSCK", new object[0], this.layDSCKOperationCompleted, userState);
        }
        
        private void OnlayDSCKOperationCompleted(object arg) {
            if ((this.layDSCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.layDSCKCompleted(this, new layDSCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetmaCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetmaCK(string maCK) {
            object[] results = this.Invoke("GetmaCK", new object[] {
                        maCK});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetmaCKAsync(string maCK) {
            this.GetmaCKAsync(maCK, null);
        }
        
        /// <remarks/>
        public void GetmaCKAsync(string maCK, object userState) {
            if ((this.GetmaCKOperationCompleted == null)) {
                this.GetmaCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetmaCKOperationCompleted);
            }
            this.InvokeAsync("GetmaCK", new object[] {
                        maCK}, this.GetmaCKOperationCompleted, userState);
        }
        
        private void OnGetmaCKOperationCompleted(object arg) {
            if ((this.GetmaCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetmaCKCompleted(this, new GetmaCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThemCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ThemCK(string jsonData) {
            object[] results = this.Invoke("ThemCK", new object[] {
                        jsonData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ThemCKAsync(string jsonData) {
            this.ThemCKAsync(jsonData, null);
        }
        
        /// <remarks/>
        public void ThemCKAsync(string jsonData, object userState) {
            if ((this.ThemCKOperationCompleted == null)) {
                this.ThemCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThemCKOperationCompleted);
            }
            this.InvokeAsync("ThemCK", new object[] {
                        jsonData}, this.ThemCKOperationCompleted, userState);
        }
        
        private void OnThemCKOperationCompleted(object arg) {
            if ((this.ThemCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThemCKCompleted(this, new ThemCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KTThongTinThemCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int KTThongTinThemCK(string maCK, string tenCK, string giaTran, string giaSan) {
            object[] results = this.Invoke("KTThongTinThemCK", new object[] {
                        maCK,
                        tenCK,
                        giaTran,
                        giaSan});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void KTThongTinThemCKAsync(string maCK, string tenCK, string giaTran, string giaSan) {
            this.KTThongTinThemCKAsync(maCK, tenCK, giaTran, giaSan, null);
        }
        
        /// <remarks/>
        public void KTThongTinThemCKAsync(string maCK, string tenCK, string giaTran, string giaSan, object userState) {
            if ((this.KTThongTinThemCKOperationCompleted == null)) {
                this.KTThongTinThemCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKTThongTinThemCKOperationCompleted);
            }
            this.InvokeAsync("KTThongTinThemCK", new object[] {
                        maCK,
                        tenCK,
                        giaTran,
                        giaSan}, this.KTThongTinThemCKOperationCompleted, userState);
        }
        
        private void OnKTThongTinThemCKOperationCompleted(object arg) {
            if ((this.KTThongTinThemCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KTThongTinThemCKCompleted(this, new KTThongTinThemCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuaCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SuaCK(string maCK, string tenCK, string giaTran, string giaSan) {
            object[] results = this.Invoke("SuaCK", new object[] {
                        maCK,
                        tenCK,
                        giaTran,
                        giaSan});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SuaCKAsync(string maCK, string tenCK, string giaTran, string giaSan) {
            this.SuaCKAsync(maCK, tenCK, giaTran, giaSan, null);
        }
        
        /// <remarks/>
        public void SuaCKAsync(string maCK, string tenCK, string giaTran, string giaSan, object userState) {
            if ((this.SuaCKOperationCompleted == null)) {
                this.SuaCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuaCKOperationCompleted);
            }
            this.InvokeAsync("SuaCK", new object[] {
                        maCK,
                        tenCK,
                        giaTran,
                        giaSan}, this.SuaCKOperationCompleted, userState);
        }
        
        private void OnSuaCKOperationCompleted(object arg) {
            if ((this.SuaCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuaCKCompleted(this, new SuaCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KTThongTinSuaCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int KTThongTinSuaCK(string giaTran, string giaSan) {
            object[] results = this.Invoke("KTThongTinSuaCK", new object[] {
                        giaTran,
                        giaSan});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void KTThongTinSuaCKAsync(string giaTran, string giaSan) {
            this.KTThongTinSuaCKAsync(giaTran, giaSan, null);
        }
        
        /// <remarks/>
        public void KTThongTinSuaCKAsync(string giaTran, string giaSan, object userState) {
            if ((this.KTThongTinSuaCKOperationCompleted == null)) {
                this.KTThongTinSuaCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKTThongTinSuaCKOperationCompleted);
            }
            this.InvokeAsync("KTThongTinSuaCK", new object[] {
                        giaTran,
                        giaSan}, this.KTThongTinSuaCKOperationCompleted, userState);
        }
        
        private void OnKTThongTinSuaCKOperationCompleted(object arg) {
            if ((this.KTThongTinSuaCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KTThongTinSuaCKCompleted(this, new KTThongTinSuaCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void layDSCKCompletedEventHandler(object sender, layDSCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class layDSCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal layDSCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetmaCKCompletedEventHandler(object sender, GetmaCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetmaCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetmaCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ThemCKCompletedEventHandler(object sender, ThemCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThemCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThemCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void KTThongTinThemCKCompletedEventHandler(object sender, KTThongTinThemCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KTThongTinThemCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KTThongTinThemCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SuaCKCompletedEventHandler(object sender, SuaCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuaCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuaCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void KTThongTinSuaCKCompletedEventHandler(object sender, KTThongTinSuaCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KTThongTinSuaCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KTThongTinSuaCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591