//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GUI.QLSucMuaWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QLiSucMuaBUSSoap", Namespace="http://tempuri.org/")]
    public partial class QLiSucMuaBUS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback timKiemOperationCompleted;
        
        private System.Threading.SendOrPostCallback layDSMaCKOperationCompleted;
        
        private System.Threading.SendOrPostCallback layThongtinCKOperationCompleted;
        
        private System.Threading.SendOrPostCallback KtraNhapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThemMuaCKOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QLiSucMuaBUS() {
            this.Url = global::GUI.Properties.Settings.Default.GUI_localhost_QLiSucMuaBUS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event timKiemCompletedEventHandler timKiemCompleted;
        
        /// <remarks/>
        public event layDSMaCKCompletedEventHandler layDSMaCKCompleted;
        
        /// <remarks/>
        public event layThongtinCKCompletedEventHandler layThongtinCKCompleted;
        
        /// <remarks/>
        public event KtraNhapCompletedEventHandler KtraNhapCompleted;
        
        /// <remarks/>
        public event GetSLCompletedEventHandler GetSLCompleted;
        
        /// <remarks/>
        public event ThemMuaCKCompletedEventHandler ThemMuaCKCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/timKiem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string timKiem(string soTKLK) {
            object[] results = this.Invoke("timKiem", new object[] {
                        soTKLK});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void timKiemAsync(string soTKLK) {
            this.timKiemAsync(soTKLK, null);
        }
        
        /// <remarks/>
        public void timKiemAsync(string soTKLK, object userState) {
            if ((this.timKiemOperationCompleted == null)) {
                this.timKiemOperationCompleted = new System.Threading.SendOrPostCallback(this.OntimKiemOperationCompleted);
            }
            this.InvokeAsync("timKiem", new object[] {
                        soTKLK}, this.timKiemOperationCompleted, userState);
        }
        
        private void OntimKiemOperationCompleted(object arg) {
            if ((this.timKiemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.timKiemCompleted(this, new timKiemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/layDSMaCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string layDSMaCK(string soTKLK) {
            object[] results = this.Invoke("layDSMaCK", new object[] {
                        soTKLK});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void layDSMaCKAsync(string soTKLK) {
            this.layDSMaCKAsync(soTKLK, null);
        }
        
        /// <remarks/>
        public void layDSMaCKAsync(string soTKLK, object userState) {
            if ((this.layDSMaCKOperationCompleted == null)) {
                this.layDSMaCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlayDSMaCKOperationCompleted);
            }
            this.InvokeAsync("layDSMaCK", new object[] {
                        soTKLK}, this.layDSMaCKOperationCompleted, userState);
        }
        
        private void OnlayDSMaCKOperationCompleted(object arg) {
            if ((this.layDSMaCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.layDSMaCKCompleted(this, new layDSMaCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/layThongtinCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string layThongtinCK(string soTKLK) {
            object[] results = this.Invoke("layThongtinCK", new object[] {
                        soTKLK});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void layThongtinCKAsync(string soTKLK) {
            this.layThongtinCKAsync(soTKLK, null);
        }
        
        /// <remarks/>
        public void layThongtinCKAsync(string soTKLK, object userState) {
            if ((this.layThongtinCKOperationCompleted == null)) {
                this.layThongtinCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlayThongtinCKOperationCompleted);
            }
            this.InvokeAsync("layThongtinCK", new object[] {
                        soTKLK}, this.layThongtinCKOperationCompleted, userState);
        }
        
        private void OnlayThongtinCKOperationCompleted(object arg) {
            if ((this.layThongtinCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.layThongtinCKCompleted(this, new layThongtinCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KtraNhap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int KtraNhap(string giaMua, string soLuongMua, string giaTran, string giaSan) {
            object[] results = this.Invoke("KtraNhap", new object[] {
                        giaMua,
                        soLuongMua,
                        giaTran,
                        giaSan});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void KtraNhapAsync(string giaMua, string soLuongMua, string giaTran, string giaSan) {
            this.KtraNhapAsync(giaMua, soLuongMua, giaTran, giaSan, null);
        }
        
        /// <remarks/>
        public void KtraNhapAsync(string giaMua, string soLuongMua, string giaTran, string giaSan, object userState) {
            if ((this.KtraNhapOperationCompleted == null)) {
                this.KtraNhapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKtraNhapOperationCompleted);
            }
            this.InvokeAsync("KtraNhap", new object[] {
                        giaMua,
                        soLuongMua,
                        giaTran,
                        giaSan}, this.KtraNhapOperationCompleted, userState);
        }
        
        private void OnKtraNhapOperationCompleted(object arg) {
            if ((this.KtraNhapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KtraNhapCompleted(this, new KtraNhapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetSL(string SoTKLK, string maCK) {
            object[] results = this.Invoke("GetSL", new object[] {
                        SoTKLK,
                        maCK});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetSLAsync(string SoTKLK, string maCK) {
            this.GetSLAsync(SoTKLK, maCK, null);
        }
        
        /// <remarks/>
        public void GetSLAsync(string SoTKLK, string maCK, object userState) {
            if ((this.GetSLOperationCompleted == null)) {
                this.GetSLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSLOperationCompleted);
            }
            this.InvokeAsync("GetSL", new object[] {
                        SoTKLK,
                        maCK}, this.GetSLOperationCompleted, userState);
        }
        
        private void OnGetSLOperationCompleted(object arg) {
            if ((this.GetSLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSLCompleted(this, new GetSLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThemMuaCK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ThemMuaCK(string soTKLK, string maCK, long sl, long gtMua, long tienMat) {
            object[] results = this.Invoke("ThemMuaCK", new object[] {
                        soTKLK,
                        maCK,
                        sl,
                        gtMua,
                        tienMat});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ThemMuaCKAsync(string soTKLK, string maCK, long sl, long gtMua, long tienMat) {
            this.ThemMuaCKAsync(soTKLK, maCK, sl, gtMua, tienMat, null);
        }
        
        /// <remarks/>
        public void ThemMuaCKAsync(string soTKLK, string maCK, long sl, long gtMua, long tienMat, object userState) {
            if ((this.ThemMuaCKOperationCompleted == null)) {
                this.ThemMuaCKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThemMuaCKOperationCompleted);
            }
            this.InvokeAsync("ThemMuaCK", new object[] {
                        soTKLK,
                        maCK,
                        sl,
                        gtMua,
                        tienMat}, this.ThemMuaCKOperationCompleted, userState);
        }
        
        private void OnThemMuaCKOperationCompleted(object arg) {
            if ((this.ThemMuaCKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThemMuaCKCompleted(this, new ThemMuaCKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void timKiemCompletedEventHandler(object sender, timKiemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class timKiemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal timKiemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void layDSMaCKCompletedEventHandler(object sender, layDSMaCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class layDSMaCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal layDSMaCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void layThongtinCKCompletedEventHandler(object sender, layThongtinCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class layThongtinCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal layThongtinCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void KtraNhapCompletedEventHandler(object sender, KtraNhapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KtraNhapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KtraNhapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSLCompletedEventHandler(object sender, GetSLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ThemMuaCKCompletedEventHandler(object sender, ThemMuaCKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThemMuaCKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThemMuaCKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591